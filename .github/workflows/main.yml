name: Build and test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

env:
  CI: true 

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with: 
          cache: 'yarn'
          node-version: '18.x'
      
      - name: Install packages
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build libs
        run: yarn build:libs
      
      - name: Build web app
        run: yarn build:app

      - name: Typecheck
        run: yarn typecheck

      - name: Unit tests
        run: yarn test

  contact-test-rest:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with: 
          cache: 'yarn'
          node-version: '18.x'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "zulu"
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2

      - name: Build java
        working-directory: ./packages/rest/test-java-svc
        run: gradle build

      - name: Generate typescript definition for OpenApi service
        working-directory: ./packages/rest/test-java-svc
        env:
          API_URL: http://localhost:8080/v3/api-docs
        run: |
          nohup gradle bootRun -Dserver.port=8080 --quiet & 2>1 >/dev/null  &
          ./wait-for-svc.sh
          curl ${API_URL} -o src/main/resources/static/openapi.json
          gradle openApiGenerate
      
      - name: Changed files
        uses: tj-actions/verify-changed-files@v14
        id: changed-files-rest-contract
        with: 
          files: packages/rest/generated-test-client

      - name: Check no changes
        if: steps.changed-files-rest-contract.files_changed == 'true'
        run: exit 1

      - name: Install packages
        run: yarn --frozen-lockfile

      - name: Build packages
        run: yarn build:libs

      - name: Contract test remote REST
        working-directory: ./packages/rest/test-java-svc
        env: 
          REST_REMOTE_URL: http://localhost:8080
          API_URL: http://localhost:8080/v3/api-docs
        run: |
          nohup gradle bootRun -Dserver.port=8080 --quiet > /dev/null 2>&1 &
          ./wait-for-svc.sh
          yarn --cwd ../test-fake-svc test:contract
    
  contract-test-signalr:

    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with: 
          cache: 'yarn'
          node-version: '18.x'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      
      - name: Install dotnet tools
        run: dotnet tool install --global TypedSignalR.Client.TypeScript.Generator
      
      - name: Install packages
        run: yarn --frozen-lockfile

      - name: Generate typescript definition for signalr service
        run: yarn --cwd packages/signalr/signalr-test-client-api generate:api

      - name: Changed files
        uses: tj-actions/verify-changed-files@v14
        id: changed-files-signalr-contract
        with: 
          files: packages/signalr/signalr-test-client-api

      - name: Check no changes
        if: steps.changed-files-signalr-contract.files_changed == 'true'
        run: exit 1
      
      - name: Build packages
        run: yarn build:libs

      - name: Contact tests REMOTE
        env: 
          API_URL: http://localhost:6002
          SIGNALR_REMOTE_PORT: 6002
        run: |
          nohup dotnet run --urls=${API_URL} --project=packages/signalr/signalr-test-dotnet-svc &
          sleep 10 # enough time to startup?
          yarn --cwd packages/signalr/signalr-test-fake-svc test:contract

  playwright-e2e:

    needs: build
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.35.0-focal
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with: 
          cache: 'yarn'
          node-version: '18.x'
      
      - name: Install packages
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build

      - name: e2e playwright
        run: |
          npx playwright install
          # HOME=/root is specific workaround for firefox 
          # see: https://github.com/microsoft/playwright/issues/6500
          HOME=/root yarn --cwd packages/test-playwright e2e --workers=1
      
      - name: Archive e2e playwright artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-e2e-results
          path: packages/test-playwright/test-results/**/*.*
          if-no-files-found: ignore

  cypress-e2e:
    needs: build
    runs-on: ubuntu-latest
     
    steps:  
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: 
          cache: 'yarn'
          node-version: '18.x'

      - name: Install packages
        run: yarn --frozen-lockfile

      - name: Cypress run
        uses: cypress-io/github-action@v5
        env: 
          ELECTRON_ENABLE_LOGGING: 0 # 1 to output browser logs
        with:
          build: yarn build
          # Start the web server serving static files. 
          # Serving via vite causes page reload due to "dependencies optimised" which breaks the first test
          start: npx --yes http-server --port 3000 --proxy http://localhost:3000? ./packages/test-web-app/dist
          wait-on: http://localhost:3000
          command: yarn --cwd packages/test-cypress e2e:ci
      
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: packages/test-cypress/cypress/screenshots
      

    
 